{"version":3,"sources":["components/images/logo.png","components/footer.js","components/header.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Footer","React","createElement","className","style","display","textAlign","data-ad-client","data-ad-slot","data-ad-format","Header","useEffect","window","adsbygoogle","push","src","logo","alt","Main","recipes","setRecipes","useState","query","setQuery","ingredients","setIngredients","isSearched","setIsSearched","errorMessage","setErrorMessage","loading","setLoading","searchRecipes","type","trim","includes","axios","get","params","cuisine","apiKey","then","response","data","results","catch","error","console","finally","value","onChange","e","target","placeholder","onClick","length","map","recipe","index","key","href","concat","title","id","rel","App","Fragment","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.084cd8c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.56f025fc.png\";","import './css/Footer.css';\r\nimport React from 'react';\r\n\r\nfunction Footer(){\r\n    return(\r\n        <section>\r\n            {/* Google AdSense Ad */}\r\n            <div className=\"ads-container\">\r\n                <ins className=\"adsbygoogle\"\r\n                    style={{ display: 'block', textAlign: 'center' }}\r\n                    data-ad-client=\"ca-pub-7360554667394701\"\r\n                    data-ad-slot=\"1234567890\"\r\n                    data-ad-format=\"auto\">\r\n                </ins>\r\n            </div>\r\n        <footer>\r\n            <div className='footer1'>\r\n                <p>\r\n                    © 2025 Deliciously coded by Shaik Abdul Kalam – Bringing recipes to your fingertips!\r\n                </p>\r\n            </div>\r\n        </footer>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\nimport './css/Header.css';\r\nimport logo from './images/logo.png';\r\n\r\n\r\nfunction Header() {\r\n    useEffect(() => {\r\n        // Initialize Google Ads after the component mounts\r\n        if (window.adsbygoogle) {\r\n            (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n        }\r\n    }, []);  // Empty array means this runs only once after the component is mounted\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"row title\">\r\n                    <div className=\"col logo\">\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </div>\r\n                    <div className=\"col titlename\">\r\n                        <h1>FlavoMap</h1>\r\n                        <p className=\"tagline\">Recipe Finder</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './css/main.css';\r\n\r\n\r\nfunction Main() {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [isSearched, setIsSearched] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const SPOONACULAR_API_KEY = '3f27652e9d0d416290668f31a7c44c3a';\r\n\r\n  const searchRecipes = (type) => {\r\n    // Clear previous results and reset state\r\n    setRecipes([]);\r\n    setIsSearched(false);\r\n    setLoading(true);\r\n    setErrorMessage('');\r\n\r\n    if (type === 'name') {\r\n      // Validate that the query does not contain commas\r\n      if (query.trim().includes(',')) {\r\n        setErrorMessage('Please enter a single recipe name without commas.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (!query.trim()) {\r\n        setErrorMessage('Please enter a recipe name.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Clear ingredients when searching by name\r\n      setIngredients('');\r\n\r\n      axios\r\n        .get(`https://api.spoonacular.com/recipes/complexSearch`, {\r\n          params: {\r\n            query: query,\r\n            cuisine: 'Indian',\r\n            apiKey: SPOONACULAR_API_KEY,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setRecipes(response.data.results || []);\r\n          setIsSearched(true);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching recipes by name:', error);\r\n          setErrorMessage('Error fetching recipes. Please try again later.');\r\n        })\r\n        .finally(() => setLoading(false));\r\n    } else if (type === 'ingredients') {\r\n      if (!ingredients.trim()) {\r\n        setErrorMessage('Please enter ingredients.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Clear query when searching by ingredients\r\n      setQuery('');\r\n\r\n      axios\r\n        .get(`https://api.spoonacular.com/recipes/findByIngredients`, {\r\n          params: {\r\n            ingredients: ingredients,\r\n            apiKey: SPOONACULAR_API_KEY,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setRecipes(response.data || []);\r\n          setIsSearched(true);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching recipes by ingredients:', error);\r\n          setErrorMessage('Error fetching recipes. Please try again later.');\r\n        })\r\n        .finally(() => setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder=\"Search by recipe name\"\r\n          />\r\n          <button onClick={() => searchRecipes('name')}>Find Recipes</button>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <input\r\n            type=\"text\"\r\n            value={ingredients}\r\n            onChange={(e) => setIngredients(e.target.value)}\r\n            placeholder=\"Search by ingredients (comma separated)\"\r\n          />\r\n          <button onClick={() => searchRecipes('ingredients')}>Find Recipes</button>\r\n        </div>\r\n\r\n        <div className=\"col error\">\r\n          {errorMessage && (\r\n            <div className=\"error-box\">\r\n              <p>{errorMessage}</p>\r\n            </div>\r\n          )}\r\n          {loading ? (\r\n            <div className=\"loading-animation\">Loading...</div>\r\n          ) : isSearched && recipes.length === 0 ? (\r\n            <p>No recipes found. Please try again!</p>\r\n          ) : (\r\n            <ul className=\"recipe\">\r\n              {recipes.map((recipe, index) => (\r\n                <li key={index}>\r\n                  <a\r\n                    href={`https://spoonacular.com/recipes/${recipe.title}-${recipe.id}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {recipe.title}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import './App.css';\nimport Footer from './components/footer.js';\nimport Header from './components/header.js';\nimport Main from './components/main.js';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <>\n    <div className=\"header\">\n      <Header />\n    </div>\n    <div className=\"content\">\n      <Main />\n    </div>\n    <div className=\"footer\">\n      <Footer />\n    </div>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}